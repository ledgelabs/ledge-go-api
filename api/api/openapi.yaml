openapi: 3.0.0
info:
  contact: {}
  license:
    name: MIT
  title: '@ledge/external-api'
  version: 1.0.0
servers:
- url: /
paths:
  /external/users:
    post:
      operationId: RegisterUser
      parameters:
      - explode: false
        in: header
        name: ApiKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExternalUser'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterUser_200_response'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ""
      security: []
      tags:
      - external
  /external/activities:
    post:
      operationId: TrackActivity
      parameters:
      - explode: false
        in: header
        name: ApiKey
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrackActivityInput'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrackActivity_200_response'
          description: Ok
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ""
      security: []
      tags:
      - external
components:
  examples: {}
  headers: {}
  parameters: {}
  requestBodies: {}
  responses: {}
  schemas:
    ErrorResponse:
      example:
        code: 0.8008281904610115
        message: message
      properties:
        message:
          type: string
        code:
          format: double
          type: number
      required:
      - code
      - message
      type: object
    Gender:
      enum:
      - male
      - female
      - other
      - unknown
      type: string
    User:
      description: Model User
      properties:
        lastLogin:
          format: date-time
          nullable: true
          type: string
        verified:
          type: boolean
        mergedWith:
          nullable: true
          type: string
        gameId:
          nullable: true
          type: string
        externalId:
          nullable: true
          type: string
        referredById:
          nullable: true
          type: string
        enableNotifications:
          type: boolean
        hasAcceptedLegal:
          type: boolean
        hasOnboarded:
          type: boolean
        gender:
          $ref: '#/components/schemas/Gender'
        birthYear:
          format: double
          type: number
        avatar:
          type: string
        remainingReferrals:
          format: double
          type: number
        code:
          type: string
        usertag:
          format: double
          type: number
        username:
          type: string
        name:
          type: string
        phoneNumber:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        originalCreationDate:
          format: date-time
          nullable: true
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - avatar
      - birthYear
      - code
      - createdAt
      - email
      - enableNotifications
      - externalId
      - gameId
      - gender
      - hasAcceptedLegal
      - hasOnboarded
      - id
      - lastLogin
      - mergedWith
      - name
      - originalCreationDate
      - phoneNumber
      - referredById
      - remainingReferrals
      - updatedAt
      - username
      - usertag
      - verified
      type: object
    QuestSchedule:
      description: Model QuestSchedule
      properties:
        questId:
          type: string
        processed:
          type: boolean
        recurring:
          type: boolean
        endTime:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - createdAt
      - endTime
      - id
      - processed
      - questId
      - recurring
      - startTime
      - updatedAt
      type: object
    QuestType:
      enum:
      - INDIVIDUAL
      - COMMUNITY
      type: string
    Quest:
      description: Model Quest
      properties:
        gameId:
          type: string
        type:
          $ref: '#/components/schemas/QuestType'
        description:
          nullable: true
          type: string
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - createdAt
      - description
      - gameId
      - id
      - title
      - type
      - updatedAt
      type: object
    QuestScheduleDetailed:
      allOf:
      - $ref: '#/components/schemas/QuestSchedule'
      - properties:
          quest:
            $ref: '#/components/schemas/Quest'
        required:
        - quest
        type: object
    Leaderboard:
      description: Model Leaderboard
      properties:
        gameId:
          type: string
        altScoreTextAlias:
          nullable: true
          type: string
        scoreTextAlias:
          type: string
        imageUrl:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - altScoreTextAlias
      - createdAt
      - description
      - gameId
      - id
      - imageUrl
      - scoreTextAlias
      - title
      - updatedAt
      type: object
    LeaderboardSchedule:
      description: Model LeaderboardSchedule
      properties:
        leaderboardId:
          type: string
        rewardsProcessed:
          type: boolean
        scheduleProcessed:
          type: boolean
        recurring:
          type: boolean
        endTime:
          format: date-time
          nullable: true
          type: string
        startTime:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - createdAt
      - endTime
      - id
      - leaderboardId
      - recurring
      - rewardsProcessed
      - scheduleProcessed
      - startTime
      - updatedAt
      type: object
    ActivityType:
      description: Enums
      enum:
      - USER_SIGN_UP
      - REFERRAL
      - GAME_CLICK
      - SOCIAL_CLICK
      - EXTERNAL
      - ACTIVITY_RESUMED
      - ACTIVITY_PAUSED
      - ACTIVITY_STOPPED
      - FOREGROUND_SERVICE_START
      - FOREGROUND_SERVICE_STOP
      - GAME_INSTALLED
      type: string
    Goal:
      description: Model Goal
      properties:
        questId:
          type: string
        objectId:
          nullable: true
          type: string
        bannerUrl:
          nullable: true
          type: string
        instructions:
          nullable: true
          type: string
        description:
          nullable: true
          type: string
        activity:
          $ref: '#/components/schemas/ActivityType'
        target:
          format: double
          type: number
        title:
          type: string
        updatedAt:
          format: date-time
          type: string
        createdAt:
          format: date-time
          type: string
        id:
          type: string
      required:
      - activity
      - bannerUrl
      - createdAt
      - description
      - id
      - instructions
      - objectId
      - questId
      - target
      - title
      - updatedAt
      type: object
    ExternalUser:
      example:
        userId: userId
        originalCreationDate: 2000-01-23T04:56:07.000+00:00
        username: username
      properties:
        originalCreationDate:
          format: date-time
          type: string
        userId:
          type: string
        username:
          type: string
      required:
      - userId
      - username
      type: object
    TrackActivityInput:
      example:
        activityId: activityId
        count: 0.8008281904610115
        occurrence: occurrence
        userId: userId
      properties:
        occurrence:
          type: string
        count:
          format: double
          type: number
        activityId:
          type: string
        userId:
          type: string
      required:
      - activityId
      - occurrence
      - userId
      type: object
    QuestCreateInput:
      properties:
        type:
          $ref: '#/components/schemas/QuestType'
        description:
          type: string
        title:
          type: string
      required:
      - description
      - title
      - type
      type: object
    QuestScheduleCreateInput:
      properties:
        recurring:
          type: boolean
        questId:
          type: string
        endTime:
          format: date-time
          type: string
        startTime:
          format: date-time
          type: string
      required:
      - endTime
      - questId
      - startTime
      type: object
    GoalCreateInput:
      properties:
        bannerUrl:
          type: string
        instructions:
          type: string
        description:
          type: string
        activityId:
          type: string
        questId:
          type: string
        target:
          format: double
          type: number
        title:
          type: string
      required:
      - activityId
      - questId
      - target
      - title
      type: object
    LeaderboardCreateInput:
      properties:
        imageUrl:
          type: string
        description:
          type: string
        altScoreTextAlias:
          type: string
        scoreTextAlias:
          type: string
        title:
          type: string
      required:
      - scoreTextAlias
      - title
      type: object
    Prisma.BatchPayload:
      description: Batch Payload for updateMany & deleteMany & createMany
      properties:
        count:
          format: double
          type: number
      required:
      - count
      type: object
    ? Pick_Prisma.LeaderboardRewardUncheckedCreateInput.Exclude_keyofPrisma.LeaderboardRewardUncheckedCreateInput.id-or-createdAt-or-updatedAt__
    : description: "From T, pick a set of properties whose keys are in the union K"
      properties:
        quantity:
          format: double
          type: number
        rewardPlace:
          format: double
          type: number
        leaderboardScheduleId:
          type: string
        productId:
          type: string
      required:
      - leaderboardScheduleId
      - productId
      - rewardPlace
      type: object
    Omit_Prisma.LeaderboardRewardUncheckedCreateInput.id-or-createdAt-or-updatedAt_:
      $ref: '#/components/schemas/Pick_Prisma.LeaderboardRewardUncheckedCreateInput.Exclude_keyofPrisma.LeaderboardRewardUncheckedCreateInput.id-or-createdAt-or-updatedAt__'
    LeaderboardRewardCreateInput:
      $ref: '#/components/schemas/Omit_Prisma.LeaderboardRewardUncheckedCreateInput.id-or-createdAt-or-updatedAt_'
    ? Pick_Prisma.GoalProductUncheckedCreateInput.Exclude_keyofPrisma.GoalProductUncheckedCreateInput.id-or-createdAt-or-updatedAt-or-userQuestDraws__
    : description: "From T, pick a set of properties whose keys are in the union K"
      properties:
        quantity:
          format: double
          type: number
        productId:
          type: string
        goalId:
          type: string
      required:
      - goalId
      - productId
      type: object
    Omit_Prisma.GoalProductUncheckedCreateInput.id-or-createdAt-or-updatedAt-or-userQuestDraws_:
      $ref: '#/components/schemas/Pick_Prisma.GoalProductUncheckedCreateInput.Exclude_keyofPrisma.GoalProductUncheckedCreateInput.id-or-createdAt-or-updatedAt-or-userQuestDraws__'
    GoalProductCreateInput:
      $ref: '#/components/schemas/Omit_Prisma.GoalProductUncheckedCreateInput.id-or-createdAt-or-updatedAt-or-userQuestDraws_'
    QuestUpdateInput:
      allOf:
      - $ref: '#/components/schemas/QuestCreateInput'
      - properties:
          questId:
            type: string
        required:
        - questId
        type: object
    QuestScheduleUpdateInput:
      allOf:
      - $ref: '#/components/schemas/QuestScheduleCreateInput'
      - properties:
          recurring:
            type: boolean
          questScheduleId:
            type: string
        required:
        - questScheduleId
        - recurring
        type: object
    GoalUpdateInput:
      allOf:
      - $ref: '#/components/schemas/GoalCreateInput'
      - properties:
          goalId:
            type: string
        required:
        - goalId
        type: object
    LeaderboardUpdateInput:
      $ref: '#/components/schemas/LeaderboardCreateInput'
    RegisterUser_200_response:
      example:
        ledgeLink: ledgeLink
        linkingCode: linkingCode
      properties:
        linkingCode:
          type: string
        ledgeLink:
          type: string
      required:
      - ledgeLink
      - linkingCode
      type: object
    TrackActivity_200_response:
      example:
        message: message
      properties:
        message:
          type: string
      required:
      - message
      type: object
  securitySchemes:
    api_key:
      in: query
      name: access_token
      type: apiKey
