/*
@ledge/external-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateQuestSchedule200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateQuestSchedule200Response{}

// CreateQuestSchedule200Response struct for CreateQuestSchedule200Response
type CreateQuestSchedule200Response struct {
	QuestSchedule *QuestSchedule `json:"questSchedule,omitempty"`
	Message string `json:"message"`
}

type _CreateQuestSchedule200Response CreateQuestSchedule200Response

// NewCreateQuestSchedule200Response instantiates a new CreateQuestSchedule200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateQuestSchedule200Response(message string) *CreateQuestSchedule200Response {
	this := CreateQuestSchedule200Response{}
	this.Message = message
	return &this
}

// NewCreateQuestSchedule200ResponseWithDefaults instantiates a new CreateQuestSchedule200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateQuestSchedule200ResponseWithDefaults() *CreateQuestSchedule200Response {
	this := CreateQuestSchedule200Response{}
	return &this
}

// GetQuestSchedule returns the QuestSchedule field value if set, zero value otherwise.
func (o *CreateQuestSchedule200Response) GetQuestSchedule() QuestSchedule {
	if o == nil || IsNil(o.QuestSchedule) {
		var ret QuestSchedule
		return ret
	}
	return *o.QuestSchedule
}

// GetQuestScheduleOk returns a tuple with the QuestSchedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateQuestSchedule200Response) GetQuestScheduleOk() (*QuestSchedule, bool) {
	if o == nil || IsNil(o.QuestSchedule) {
		return nil, false
	}
	return o.QuestSchedule, true
}

// HasQuestSchedule returns a boolean if a field has been set.
func (o *CreateQuestSchedule200Response) HasQuestSchedule() bool {
	if o != nil && !IsNil(o.QuestSchedule) {
		return true
	}

	return false
}

// SetQuestSchedule gets a reference to the given QuestSchedule and assigns it to the QuestSchedule field.
func (o *CreateQuestSchedule200Response) SetQuestSchedule(v QuestSchedule) {
	o.QuestSchedule = &v
}

// GetMessage returns the Message field value
func (o *CreateQuestSchedule200Response) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *CreateQuestSchedule200Response) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *CreateQuestSchedule200Response) SetMessage(v string) {
	o.Message = v
}

func (o CreateQuestSchedule200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateQuestSchedule200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QuestSchedule) {
		toSerialize["questSchedule"] = o.QuestSchedule
	}
	toSerialize["message"] = o.Message
	return toSerialize, nil
}

func (o *CreateQuestSchedule200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"message",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateQuestSchedule200Response := _CreateQuestSchedule200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateQuestSchedule200Response)

	if err != nil {
		return err
	}

	*o = CreateQuestSchedule200Response(varCreateQuestSchedule200Response)

	return err
}

type NullableCreateQuestSchedule200Response struct {
	value *CreateQuestSchedule200Response
	isSet bool
}

func (v NullableCreateQuestSchedule200Response) Get() *CreateQuestSchedule200Response {
	return v.value
}

func (v *NullableCreateQuestSchedule200Response) Set(val *CreateQuestSchedule200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateQuestSchedule200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateQuestSchedule200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateQuestSchedule200Response(val *CreateQuestSchedule200Response) *NullableCreateQuestSchedule200Response {
	return &NullableCreateQuestSchedule200Response{value: val, isSet: true}
}

func (v NullableCreateQuestSchedule200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateQuestSchedule200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


