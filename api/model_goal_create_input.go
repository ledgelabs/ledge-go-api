/*
@ledge/external-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GoalCreateInput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoalCreateInput{}

// GoalCreateInput struct for GoalCreateInput
type GoalCreateInput struct {
	BannerUrl *string `json:"bannerUrl,omitempty"`
	Instructions *string `json:"instructions,omitempty"`
	Description *string `json:"description,omitempty"`
	ActivityId string `json:"activityId"`
	QuestId string `json:"questId"`
	Target float64 `json:"target"`
	Title string `json:"title"`
}

type _GoalCreateInput GoalCreateInput

// NewGoalCreateInput instantiates a new GoalCreateInput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoalCreateInput(activityId string, questId string, target float64, title string) *GoalCreateInput {
	this := GoalCreateInput{}
	this.ActivityId = activityId
	this.QuestId = questId
	this.Target = target
	this.Title = title
	return &this
}

// NewGoalCreateInputWithDefaults instantiates a new GoalCreateInput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoalCreateInputWithDefaults() *GoalCreateInput {
	this := GoalCreateInput{}
	return &this
}

// GetBannerUrl returns the BannerUrl field value if set, zero value otherwise.
func (o *GoalCreateInput) GetBannerUrl() string {
	if o == nil || IsNil(o.BannerUrl) {
		var ret string
		return ret
	}
	return *o.BannerUrl
}

// GetBannerUrlOk returns a tuple with the BannerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetBannerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BannerUrl) {
		return nil, false
	}
	return o.BannerUrl, true
}

// HasBannerUrl returns a boolean if a field has been set.
func (o *GoalCreateInput) HasBannerUrl() bool {
	if o != nil && !IsNil(o.BannerUrl) {
		return true
	}

	return false
}

// SetBannerUrl gets a reference to the given string and assigns it to the BannerUrl field.
func (o *GoalCreateInput) SetBannerUrl(v string) {
	o.BannerUrl = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *GoalCreateInput) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *GoalCreateInput) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *GoalCreateInput) SetInstructions(v string) {
	o.Instructions = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GoalCreateInput) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GoalCreateInput) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GoalCreateInput) SetDescription(v string) {
	o.Description = &v
}

// GetActivityId returns the ActivityId field value
func (o *GoalCreateInput) GetActivityId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ActivityId
}

// GetActivityIdOk returns a tuple with the ActivityId field value
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetActivityIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ActivityId, true
}

// SetActivityId sets field value
func (o *GoalCreateInput) SetActivityId(v string) {
	o.ActivityId = v
}

// GetQuestId returns the QuestId field value
func (o *GoalCreateInput) GetQuestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuestId
}

// GetQuestIdOk returns a tuple with the QuestId field value
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetQuestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuestId, true
}

// SetQuestId sets field value
func (o *GoalCreateInput) SetQuestId(v string) {
	o.QuestId = v
}

// GetTarget returns the Target field value
func (o *GoalCreateInput) GetTarget() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetTargetOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *GoalCreateInput) SetTarget(v float64) {
	o.Target = v
}

// GetTitle returns the Title field value
func (o *GoalCreateInput) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *GoalCreateInput) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *GoalCreateInput) SetTitle(v string) {
	o.Title = v
}

func (o GoalCreateInput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoalCreateInput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BannerUrl) {
		toSerialize["bannerUrl"] = o.BannerUrl
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["activityId"] = o.ActivityId
	toSerialize["questId"] = o.QuestId
	toSerialize["target"] = o.Target
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *GoalCreateInput) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"activityId",
		"questId",
		"target",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGoalCreateInput := _GoalCreateInput{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGoalCreateInput)

	if err != nil {
		return err
	}

	*o = GoalCreateInput(varGoalCreateInput)

	return err
}

type NullableGoalCreateInput struct {
	value *GoalCreateInput
	isSet bool
}

func (v NullableGoalCreateInput) Get() *GoalCreateInput {
	return v.value
}

func (v *NullableGoalCreateInput) Set(val *GoalCreateInput) {
	v.value = val
	v.isSet = true
}

func (v NullableGoalCreateInput) IsSet() bool {
	return v.isSet
}

func (v *NullableGoalCreateInput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoalCreateInput(val *GoalCreateInput) *NullableGoalCreateInput {
	return &NullableGoalCreateInput{value: val, isSet: true}
}

func (v NullableGoalCreateInput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoalCreateInput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


