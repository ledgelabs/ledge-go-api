/*
@ledge/external-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateQuestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateQuestRequest{}

// CreateQuestRequest struct for CreateQuestRequest
type CreateQuestRequest struct {
	Description string `json:"description"`
	Title string `json:"title"`
}

type _CreateQuestRequest CreateQuestRequest

// NewCreateQuestRequest instantiates a new CreateQuestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateQuestRequest(description string, title string) *CreateQuestRequest {
	this := CreateQuestRequest{}
	this.Description = description
	this.Title = title
	return &this
}

// NewCreateQuestRequestWithDefaults instantiates a new CreateQuestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateQuestRequestWithDefaults() *CreateQuestRequest {
	this := CreateQuestRequest{}
	return &this
}

// GetDescription returns the Description field value
func (o *CreateQuestRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateQuestRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateQuestRequest) SetDescription(v string) {
	o.Description = v
}

// GetTitle returns the Title field value
func (o *CreateQuestRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateQuestRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateQuestRequest) SetTitle(v string) {
	o.Title = v
}

func (o CreateQuestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateQuestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *CreateQuestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateQuestRequest := _CreateQuestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateQuestRequest)

	if err != nil {
		return err
	}

	*o = CreateQuestRequest(varCreateQuestRequest)

	return err
}

type NullableCreateQuestRequest struct {
	value *CreateQuestRequest
	isSet bool
}

func (v NullableCreateQuestRequest) Get() *CreateQuestRequest {
	return v.value
}

func (v *NullableCreateQuestRequest) Set(val *CreateQuestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateQuestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateQuestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateQuestRequest(val *CreateQuestRequest) *NullableCreateQuestRequest {
	return &NullableCreateQuestRequest{value: val, isSet: true}
}

func (v NullableCreateQuestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateQuestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


