/*
@ledge/external-api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package ledgeapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateGoalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateGoalRequest{}

// CreateGoalRequest struct for CreateGoalRequest
type CreateGoalRequest struct {
	Activity string `json:"activity"`
	QuestId string `json:"questId"`
	BannerUrl *string `json:"bannerUrl,omitempty"`
	Target float64 `json:"target"`
	Instruction *string `json:"instruction,omitempty"`
	Description string `json:"description"`
	Title string `json:"title"`
}

type _CreateGoalRequest CreateGoalRequest

// NewCreateGoalRequest instantiates a new CreateGoalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGoalRequest(activity string, questId string, target float64, description string, title string) *CreateGoalRequest {
	this := CreateGoalRequest{}
	this.Activity = activity
	this.QuestId = questId
	this.Target = target
	this.Description = description
	this.Title = title
	return &this
}

// NewCreateGoalRequestWithDefaults instantiates a new CreateGoalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGoalRequestWithDefaults() *CreateGoalRequest {
	this := CreateGoalRequest{}
	return &this
}

// GetActivity returns the Activity field value
func (o *CreateGoalRequest) GetActivity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Activity
}

// GetActivityOk returns a tuple with the Activity field value
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetActivityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Activity, true
}

// SetActivity sets field value
func (o *CreateGoalRequest) SetActivity(v string) {
	o.Activity = v
}

// GetQuestId returns the QuestId field value
func (o *CreateGoalRequest) GetQuestId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QuestId
}

// GetQuestIdOk returns a tuple with the QuestId field value
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetQuestIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QuestId, true
}

// SetQuestId sets field value
func (o *CreateGoalRequest) SetQuestId(v string) {
	o.QuestId = v
}

// GetBannerUrl returns the BannerUrl field value if set, zero value otherwise.
func (o *CreateGoalRequest) GetBannerUrl() string {
	if o == nil || IsNil(o.BannerUrl) {
		var ret string
		return ret
	}
	return *o.BannerUrl
}

// GetBannerUrlOk returns a tuple with the BannerUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetBannerUrlOk() (*string, bool) {
	if o == nil || IsNil(o.BannerUrl) {
		return nil, false
	}
	return o.BannerUrl, true
}

// HasBannerUrl returns a boolean if a field has been set.
func (o *CreateGoalRequest) HasBannerUrl() bool {
	if o != nil && !IsNil(o.BannerUrl) {
		return true
	}

	return false
}

// SetBannerUrl gets a reference to the given string and assigns it to the BannerUrl field.
func (o *CreateGoalRequest) SetBannerUrl(v string) {
	o.BannerUrl = &v
}

// GetTarget returns the Target field value
func (o *CreateGoalRequest) GetTarget() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetTargetOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *CreateGoalRequest) SetTarget(v float64) {
	o.Target = v
}

// GetInstruction returns the Instruction field value if set, zero value otherwise.
func (o *CreateGoalRequest) GetInstruction() string {
	if o == nil || IsNil(o.Instruction) {
		var ret string
		return ret
	}
	return *o.Instruction
}

// GetInstructionOk returns a tuple with the Instruction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetInstructionOk() (*string, bool) {
	if o == nil || IsNil(o.Instruction) {
		return nil, false
	}
	return o.Instruction, true
}

// HasInstruction returns a boolean if a field has been set.
func (o *CreateGoalRequest) HasInstruction() bool {
	if o != nil && !IsNil(o.Instruction) {
		return true
	}

	return false
}

// SetInstruction gets a reference to the given string and assigns it to the Instruction field.
func (o *CreateGoalRequest) SetInstruction(v string) {
	o.Instruction = &v
}

// GetDescription returns the Description field value
func (o *CreateGoalRequest) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CreateGoalRequest) SetDescription(v string) {
	o.Description = v
}

// GetTitle returns the Title field value
func (o *CreateGoalRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *CreateGoalRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *CreateGoalRequest) SetTitle(v string) {
	o.Title = v
}

func (o CreateGoalRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateGoalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["activity"] = o.Activity
	toSerialize["questId"] = o.QuestId
	if !IsNil(o.BannerUrl) {
		toSerialize["bannerUrl"] = o.BannerUrl
	}
	toSerialize["target"] = o.Target
	if !IsNil(o.Instruction) {
		toSerialize["instruction"] = o.Instruction
	}
	toSerialize["description"] = o.Description
	toSerialize["title"] = o.Title
	return toSerialize, nil
}

func (o *CreateGoalRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"activity",
		"questId",
		"target",
		"description",
		"title",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateGoalRequest := _CreateGoalRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateGoalRequest)

	if err != nil {
		return err
	}

	*o = CreateGoalRequest(varCreateGoalRequest)

	return err
}

type NullableCreateGoalRequest struct {
	value *CreateGoalRequest
	isSet bool
}

func (v NullableCreateGoalRequest) Get() *CreateGoalRequest {
	return v.value
}

func (v *NullableCreateGoalRequest) Set(val *CreateGoalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGoalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGoalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGoalRequest(val *CreateGoalRequest) *NullableCreateGoalRequest {
	return &NullableCreateGoalRequest{value: val, isSet: true}
}

func (v NullableCreateGoalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGoalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


